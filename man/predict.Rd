% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.R
\name{predict}
\alias{predict}
\alias{predict,ellipsoid-method}
\alias{predict,ellipsoid_model_rep-method}
\title{Suitability and Mahalanobis distance predictions from ellipsoid* objects}
\usage{
## S4 method for signature 'ellipsoid'
predict(object, projection_variables, prediction = "suitability",
        truncate = TRUE, return_numeric, tolerance = 1e-60,
        name = NULL, format, overwrite = FALSE, force_return = FALSE)

## S4 method for signature 'ellipsoid_model_rep'
predict(object, projection_variables, prediction = "suitability",
        truncate = TRUE, return_numeric, tolerance = 1e-60,
        name = NULL, format, overwrite = FALSE, force_return = FALSE,
        return_name = NULL)
}
\arguments{
\item{object}{a fitted object of class ellipsoid*.}

\item{projection_variables}{SpatRaster or matrix of variables representing
environmental conditions of the scenario to which \code{object} will be
projected. See details.}

\item{prediction}{(character) type of prediction to be made, options are:
"suitability", "mahalanobis", and "both". Default = "suitability".}

\item{truncate}{(logical) whether or not to truncate values of suitability
based on ellipsoid limits. All values outside the ellipsoid will be zero.
Default = TRUE.}

\item{return_numeric}{(logical) whether or not to return values of mahalanobis
distance and suitability as part of the results (it depends on the type of
\code{prediction} selected). If \code{projection_variables} is a SpatRaster,
default = FALSE, but can be changed to TRUE; if \code{projection_variables} is
a matrix, default = TRUE and cannot be changed. See details.}

\item{tolerance}{the tolerance for detecting linear dependencies.
Default = 1e-60.}

\item{name}{(character) optional, a name for the files to be writen. When
defined, raster predictions and numeric results are not returned as part of
the ellipsoid* object unless \code{force_return} = TRUE. File extensions will
be added as needed for writing raster and numeric results. Default = NULL.
See details.}

\item{format}{(charater) if \code{name} is defined, raster type to be written.
See \code{\link[raster]{writeFormats}} for details and options.}

\item{overwrite}{(logical) if \code{name} is defined, whether or not to
overwrite an exitent file with the exact same name. Default = FALSE.}

\item{force_return}{(logical) whether or not to force returning numeric and
raster results as part of the ellipsoid* object when \code{name} is defined.}

\item{return_name}{(character) names of the ellipsoid (part of \code{object})
for which numeric and raster results will be forced to return if \code{name}
is defined. Default = NULL.}
}
\value{
An ellipsoid_model* with new predictions. If \code{name} is defined, csv
files with numeric results and raster files with the geographic predictions
will be written.
}
\description{
predicts suitability or/and Mahalanobis distance based on
ellipsoid* objects.
}
\details{
Argument \code{object} must be of one of the following classes: "ellipsoid"
or "ellipsoid_model_sim". The prefix "suitability" or "mahalanobis" will be
added to \code{name} depending on the type of prediction defined in
\code{prediction}. File type (extension) will be added to \code{name}, if
defined, .csv for numeric results and any of the ones described in
\code{\link[raster]{writeFormats}} depending on \code{format}.

Argument \code{projection_variables} variables can be defined either as a
SpatRaster or as a matrix. If a matrix is given each column represents a
variable and predictions are returned only as numeric vectors. In both cases,
variable names must match exactly the order and name of variables used to
create \code{object}.

If \code{projection_variables} is a matrix at least one numeric result will be
returned even if \code{return numeric} is set as FALSE; if \code{return_name}
is defined this indicates the ellipsoid for which the numeric result will
return, if not defined, the results for the first ellipsoid will return.

The only scenarios in which none of the numeric results will be returned are:
if \code{projection_variables} is a SpatRaster and \code{return numeric} is
set as FALSE, and if \code{name} is defined and \code{force_return} is set as
FALSE, even if \code{return numeric} = TRUE for ellipsoid_model_sim. However,
for the latter case, if \code{force_return} is set as TRUE, raster and numeric
results will be returned for the ellipsoid defined in \code{return_name}.
}
\examples{
# reading data
occurrences <- read.csv(system.file("extdata", "occurrences.csv",
                                    package = "ellipsenm"))

# raster layers of environmental data
vars <- terra::rast(list.files(system.file("extdata", package = "ellipsenm"),
                                 pattern = "bio", full.names = TRUE))


# example with simple ellipsoid
# fitting an ellipsoid
ellips1 <- ellipsoid_fit(data = occurrences, longitude = "longitude",
                         latitude = "latitude", method = "covmat",
                         level = 99, raster_layers = vars)

# predicting suitability (some slots will be empty if not required)
prediction <- predict(object = ellips1, projection_variables = vars,
                      prediction = "suitability")

class(prediction)

# predicting mahalanobis distance
prediction1 <- predict(object = ellips1, projection_variables = vars,
                       prediction = "mahalanobis")


# example with replicated ellipsoid
# getting values of variables in data
occurrences1 <- cbind(occurrences[, 2:3],
                      terra::extract(vars, occurrences[, 2:3])[, -1])

# subsampling data for construction of multiple ellipsoids
subsamples <- data_subsample(data = occurrences1, replicates = 10,
                             replicate_type = "bootstrap")

# fitting ellipsoids for the 10 subsamples
ellipsoids <- lapply(subsamples, function (x) {
  ellipsoid_fit(data = x, longitude = "longitude",
                latitude = "latitude", method = "covmat",
                level = 99)
})
names(ellipsoids) <- paste0("replicate_", 1:10)

# creating an ellipsoid_model_rep object with replicates and mean, min, max
ell_rep <- new("ellipsoid_model_rep",
               ellipsoids = c(ellipsoids, mmm_ellipsoid(ellipsoids)))

# predicting suitability
prediction_rep <- predict(object = ell_rep, projection_variables = vars,
                          prediction = "suitability")

# predicting mahalanobis distance
prediction_rep <- predict(object = ell_rep, projection_variables = vars,
                          prediction = "mahalanobis")
}
