% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_overlap.R
\name{plot_overlap}
\alias{plot_overlap}
\title{Plot results of niche overlap analyses}
\usage{
plot_overlap(object, niches = c(1, 2), niche_col = c("blue", "gray"),
             data = TRUE, data_col = c("blue", "gray"),
             background = FALSE, background_type, proportion = 0.3,
             background_col = grDevices::terrain.colors, change_labels = FALSE,
             xlab = "", ylab = "", zlab = "", legend = TRUE)
}
\arguments{
\item{object}{overlap_ellipsoid object resulted from using the function
\code{\link{ellipsoid_overlap}}.}

\item{niches}{(numeric) pair of integer numbers denoting the niches to be
plotted. Default = c(1, 2).}

\item{niche_col}{colors to be used to plot ellipsoids of niches to be
compared. Default = c("blue", "gray").}

\item{data}{(logical) whether or not to plot points of species data. Default
= TRUE.}

\item{data_col}{colors to be used to plot data points of niches to be
compared. Default = c("blue", "gray").}

\item{background}{(logical) whether or not to plot background points. Default
= TRUE.}

\item{background_type}{(character) type of background to be plotted. Options
are: "full", "back_union". See \code{\link{ellipsoid_overlap}}.}

\item{proportion}{(numeric) proportion of background to be plotted. Default = 0.3.}

\item{background_col}{color ramp to be used for coloring background points.
Default = grDevices::terrain.colors.}

\item{change_labels}{(logical) whether or not to change axes label.
Default = FALSE.}

\item{xlab}{(character) lable of x axis. Default = "".}

\item{ylab}{(character) lable of y axis. Default = "".}

\item{zlab}{(character) lable of z axis. Default = "".}

\item{legend}{(logical) whether or not to add a simple legend. Default = TRUE.}
}
\value{
A plot of the niches to be compared in environmental space.
}
\description{
plot_overlap helps to create two or three dimensional representations
of the overlap results obtained with the function \code{\link{ellipsoid_overlap}}.
}
\examples{
# Preparing example
# reading data
occurrences <- read.csv(system.file("extdata", "occurrences.csv",
                                    package = "ellipsenm"))

# raster layers of environmental data
vars <- terra::rast(list.files(system.file("extdata", package = "ellipsenm"),
                                 pattern = "bio", full.names = TRUE))

# preparing data
vext <- terra::ext(vars)
ext1 <- terra::ext(vext[1], (mean(vext[1:2]) + 0.2), vext[3:4])
ext2 <- terra::ext((mean(vext[1:2]) + 0.2), vext[2], vext[3:4])

# croping variables and splitting occurrences
vars1 <- terra::crop(vars, ext1)
vars2 <- terra::crop(vars, ext2)

occurrences1 <- occurrences[occurrences$longitude < (mean(vext[1:2]) + 0.2), ]
occurrences2 <- occurrences[!occurrences$longitude \%in\% occurrences1$longitude, ]

# preparing overlap objects to perform analyses
niche1 <- overlap_object(occurrences1, species =  "species", longitude = "longitude",
                         latitude = "latitude", method = "covmat", level = 95,
                         variables = vars1)

niche2 <- overlap_object(occurrences2, species =  "species", longitude = "longitude",
                         latitude = "latitude", method = "covmat", level = 95,
                         variables = vars2)

# niche overlap analysis
overlap <- ellipsoid_overlap(niche1, niche2)

# Now the plots
# plotting only ellipsoids
plot_overlap(overlap)

# plotting ellispods and background for full overlap
plot_overlap(overlap, background = TRUE, proportion = 0.6, background_type = "full")

# plotting ellispods and background for overlap based on accessible environments
plot_overlap(overlap, background = TRUE,  proportion = 1, background_type = "back_union")
}
